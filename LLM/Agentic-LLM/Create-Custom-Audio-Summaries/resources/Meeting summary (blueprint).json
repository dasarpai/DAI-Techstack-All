{
    "name": "Meeting summary (blueprint)",
    "flow": [
        {
            "id": 28,
            "module": "dropbox:watchFiles2",
            "version": 5,
            "parameters": {
                "limit": 2,
                "recursive": false,
                "undefined": "list",
                "__IMTCONN__": 726929
            },
            "mapper": {},
            "metadata": {
                "designer": {
                    "x": -237,
                    "y": -270
                },
                "restore": {
                    "parameters": {
                        "undefined": {
                            "label": "Select from List"
                        },
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "dropbox"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:dropbox",
                        "label": "Connection",
                        "required": true
                    },
                    {
                        "type": "select",
                        "label": "Folder Search Method",
                        "validate": {
                            "enum": [
                                "list",
                                "keyword"
                            ]
                        }
                    },
                    {
                        "name": "recursive",
                        "type": "boolean",
                        "label": "Watch also subfolders",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "type": "uinteger",
                        "label": "Limit",
                        "required": true
                    },
                    {
                        "name": "path",
                        "type": "folder",
                        "label": "Folder Path"
                    }
                ]
            }
        },
        {
            "id": 29,
            "module": "dropbox:getFile",
            "version": 5,
            "parameters": {
                "__IMTCONN__": 726929
            },
            "mapper": {
                "path": "{{28.path_display}}",
                "select": "map"
            },
            "metadata": {
                "designer": {
                    "x": 63,
                    "y": -270
                },
                "restore": {
                    "expect": {
                        "select": {
                            "label": "Map a file path"
                        }
                    },
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "dropbox"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:dropbox",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "select",
                        "type": "select",
                        "label": "Way of selecting files",
                        "required": true,
                        "validate": {
                            "enum": [
                                "map",
                                "file"
                            ]
                        }
                    },
                    {
                        "name": "path",
                        "type": "text",
                        "label": "File Path",
                        "required": true
                    }
                ]
            }
        },
        {
            "id": 31,
            "module": "util:TransformEncoding",
            "version": 1,
            "parameters": {},
            "mapper": {
                "cpin": "",
                "data": "{{29.data}}",
                "cpout": "utf16be"
            },
            "metadata": {
                "designer": {
                    "x": 363,
                    "y": -270,
                    "name": "Document content"
                },
                "restore": {
                    "expect": {
                        "cpin": {
                            "mode": "chose",
                            "label": "Empty"
                        },
                        "cpout": {
                            "mode": "chose",
                            "label": "UTF 16 (BE)"
                        }
                    }
                },
                "expect": [
                    {
                        "name": "data",
                        "type": "buffer",
                        "label": "Input data"
                    },
                    {
                        "name": "cpin",
                        "type": "select",
                        "label": "Input data codepage",
                        "validate": {
                            "enum": [
                                "utf8",
                                "ucs2",
                                "utf16be",
                                "cp1250",
                                "cp1251",
                                "cp1252",
                                "cp1253",
                                "cp1254",
                                "cp1255",
                                "cp1256",
                                "cp1257",
                                "cp1258",
                                "cp28591",
                                "cp28592",
                                "cp28593",
                                "cp28594",
                                "cp28595",
                                "cp28596",
                                "cp28597",
                                "cp28598",
                                "cp28599",
                                "cp28600",
                                "cp28601",
                                "cp28602",
                                "cp28603",
                                "cp28604",
                                "cp28605",
                                "cp28606",
                                "big5",
                                "big5-hkscs",
                                "euc-cn",
                                "euc-jp",
                                "euc-kr",
                                "gb18030",
                                "gb2312",
                                "gbk",
                                "ks_c_5601",
                                "shift_jis",
                                "windows-31j",
                                "windows932",
                                "windows936",
                                "windows949",
                                "windows950",
                                "ascii"
                            ]
                        }
                    },
                    {
                        "name": "cpout",
                        "type": "select",
                        "label": "Output data codepage",
                        "required": true,
                        "validate": {
                            "enum": [
                                "utf8",
                                "ucs2",
                                "utf16be",
                                "cp1250",
                                "cp1251",
                                "cp1252",
                                "cp1253",
                                "cp1254",
                                "cp1255",
                                "cp1256",
                                "cp1257",
                                "cp1258",
                                "cp28591",
                                "cp28592",
                                "cp28593",
                                "cp28594",
                                "cp28595",
                                "cp28596",
                                "cp28597",
                                "cp28598",
                                "cp28599",
                                "cp28600",
                                "cp28601",
                                "cp28602",
                                "cp28603",
                                "cp28604",
                                "cp28605",
                                "cp28606",
                                "big5",
                                "big5-hkscs",
                                "euc-cn",
                                "euc-jp",
                                "euc-kr",
                                "gb18030",
                                "gb2312",
                                "gbk",
                                "ks_c_5601",
                                "shift_jis",
                                "windows-31j",
                                "windows932",
                                "windows936",
                                "windows949",
                                "windows950",
                                "ascii"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "id": 32,
            "module": "dropbox:moveFileFolder",
            "version": 5,
            "parameters": {
                "__IMTCONN__": 726929
            },
            "mapper": {
                "path": "{{28.path_display}}",
                "select": "map",
                "autorename": true,
                "allow_ownership_transfer": false
            },
            "metadata": {
                "designer": {
                    "x": 663,
                    "y": -270
                },
                "restore": {
                    "expect": {
                        "select": {
                            "label": "Map a file/folder path"
                        },
                        "to_path": {
                            "mode": "chose"
                        },
                        "autorename": {
                            "mode": "chose"
                        },
                        "allow_ownership_transfer": {
                            "mode": "chose"
                        }
                    },
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "dropbox"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:dropbox",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "select",
                        "type": "select",
                        "label": "Way of selecting files",
                        "required": true,
                        "validate": {
                            "enum": [
                                "map",
                                "file"
                            ]
                        }
                    },
                    {
                        "name": "to_path",
                        "type": "folder",
                        "label": "To Folder"
                    },
                    {
                        "name": "name",
                        "type": "text",
                        "label": "New Name"
                    },
                    {
                        "name": "autorename",
                        "type": "boolean",
                        "label": "Auto rename",
                        "required": true
                    },
                    {
                        "name": "allow_ownership_transfer",
                        "type": "boolean",
                        "label": "Allow ownership transfer",
                        "required": true
                    },
                    {
                        "name": "path",
                        "type": "text",
                        "label": "File/Folder Path",
                        "required": true
                    }
                ],
                "advanced": true
            }
        },
        {
            "id": 5,
            "module": "regexp:Parser",
            "version": 1,
            "parameters": {
                "global": false,
                "pattern": "^\\s*(\\w+\\s+\\d{1,2},\\s+\\d{4})",
                "multiline": false,
                "sensitive": true,
                "singleline": false,
                "continueWhenNoRes": false
            },
            "mapper": {
                "text": "{{31.data}}"
            },
            "metadata": {
                "designer": {
                    "x": 55,
                    "y": 36,
                    "name": "Meeting date"
                },
                "restore": {},
                "parameters": [
                    {
                        "name": "pattern",
                        "type": "text",
                        "label": "Pattern",
                        "required": true
                    },
                    {
                        "name": "global",
                        "type": "boolean",
                        "label": "Global match",
                        "required": true
                    },
                    {
                        "name": "sensitive",
                        "type": "boolean",
                        "label": "Case sensitive",
                        "required": true
                    },
                    {
                        "name": "multiline",
                        "type": "boolean",
                        "label": "Multiline",
                        "required": true
                    },
                    {
                        "name": "singleline",
                        "type": "boolean",
                        "label": "Singleline",
                        "required": true
                    },
                    {
                        "name": "continueWhenNoRes",
                        "type": "boolean",
                        "label": "Continue the execution of the route even if the module finds no matches",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "text",
                        "type": "text",
                        "label": "Text"
                    }
                ],
                "interface": [
                    {
                        "name": "$1",
                        "type": "text",
                        "label": "$1"
                    }
                ]
            }
        },
        {
            "id": 6,
            "module": "regexp:Parser",
            "version": 1,
            "parameters": {
                "global": false,
                "pattern": "^\\s*##\\s*(.+)",
                "multiline": true,
                "sensitive": false,
                "singleline": false,
                "continueWhenNoRes": false
            },
            "mapper": {
                "text": "{{31.data}}"
            },
            "metadata": {
                "designer": {
                    "x": 355,
                    "y": 36,
                    "name": "Meeting type"
                },
                "restore": {},
                "parameters": [
                    {
                        "name": "pattern",
                        "type": "text",
                        "label": "Pattern",
                        "required": true
                    },
                    {
                        "name": "global",
                        "type": "boolean",
                        "label": "Global match",
                        "required": true
                    },
                    {
                        "name": "sensitive",
                        "type": "boolean",
                        "label": "Case sensitive",
                        "required": true
                    },
                    {
                        "name": "multiline",
                        "type": "boolean",
                        "label": "Multiline",
                        "required": true
                    },
                    {
                        "name": "singleline",
                        "type": "boolean",
                        "label": "Singleline",
                        "required": true
                    },
                    {
                        "name": "continueWhenNoRes",
                        "type": "boolean",
                        "label": "Continue the execution of the route even if the module finds no matches",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "text",
                        "type": "text",
                        "label": "Text"
                    }
                ],
                "interface": [
                    {
                        "name": "$1",
                        "type": "text",
                        "label": "$1"
                    }
                ]
            }
        },
        {
            "id": 7,
            "module": "regexp:Parser",
            "version": 1,
            "parameters": {
                "global": false,
                "pattern": "###\\s*Summary\\s*\\n([\\s\\S]*?)(?=\\n###|$)",
                "multiline": true,
                "sensitive": false,
                "singleline": true,
                "continueWhenNoRes": false
            },
            "mapper": {
                "text": "{{31.data}}"
            },
            "metadata": {
                "designer": {
                    "x": 655,
                    "y": 36,
                    "name": "Meeting summary content"
                },
                "restore": {},
                "parameters": [
                    {
                        "name": "pattern",
                        "type": "text",
                        "label": "Pattern",
                        "required": true
                    },
                    {
                        "name": "global",
                        "type": "boolean",
                        "label": "Global match",
                        "required": true
                    },
                    {
                        "name": "sensitive",
                        "type": "boolean",
                        "label": "Case sensitive",
                        "required": true
                    },
                    {
                        "name": "multiline",
                        "type": "boolean",
                        "label": "Multiline",
                        "required": true
                    },
                    {
                        "name": "singleline",
                        "type": "boolean",
                        "label": "Singleline",
                        "required": true
                    },
                    {
                        "name": "continueWhenNoRes",
                        "type": "boolean",
                        "label": "Continue the execution of the route even if the module finds no matches",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "text",
                        "type": "text",
                        "label": "Text"
                    }
                ],
                "interface": [
                    {
                        "name": "$1",
                        "type": "text",
                        "label": "$1"
                    }
                ]
            }
        },
        {
            "id": 8,
            "module": "regexp:Parser",
            "version": 1,
            "parameters": {
                "global": false,
                "pattern": "###\\s*Details\\s*\\n([\\s\\S]*?)(?=\\n###|$)",
                "multiline": false,
                "sensitive": false,
                "singleline": false,
                "continueWhenNoRes": false
            },
            "mapper": {
                "text": "{{31.data}}"
            },
            "metadata": {
                "designer": {
                    "x": 955,
                    "y": 36,
                    "name": "Meeting details content"
                },
                "restore": {},
                "parameters": [
                    {
                        "name": "pattern",
                        "type": "text",
                        "label": "Pattern",
                        "required": true
                    },
                    {
                        "name": "global",
                        "type": "boolean",
                        "label": "Global match",
                        "required": true
                    },
                    {
                        "name": "sensitive",
                        "type": "boolean",
                        "label": "Case sensitive",
                        "required": true
                    },
                    {
                        "name": "multiline",
                        "type": "boolean",
                        "label": "Multiline",
                        "required": true
                    },
                    {
                        "name": "singleline",
                        "type": "boolean",
                        "label": "Singleline",
                        "required": true
                    },
                    {
                        "name": "continueWhenNoRes",
                        "type": "boolean",
                        "label": "Continue the execution of the route even if the module finds no matches",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "text",
                        "type": "text",
                        "label": "Text"
                    }
                ],
                "interface": [
                    {
                        "name": "$1",
                        "type": "text",
                        "label": "$1"
                    }
                ]
            }
        },
        {
            "id": 15,
            "module": "regexp:Parser",
            "version": 1,
            "parameters": {
                "global": true,
                "pattern": "^\\*\\s+(.*)",
                "multiline": true,
                "sensitive": false,
                "singleline": false,
                "continueWhenNoRes": false,
                "ignoreInfiniteLoopsWhenGlobal": false
            },
            "mapper": {
                "text": "{{8.`$1`}}"
            },
            "metadata": {
                "designer": {
                    "x": 1255,
                    "y": 36
                },
                "restore": {},
                "parameters": [
                    {
                        "name": "pattern",
                        "type": "text",
                        "label": "Pattern",
                        "required": true
                    },
                    {
                        "name": "global",
                        "type": "boolean",
                        "label": "Global match",
                        "required": true
                    },
                    {
                        "name": "sensitive",
                        "type": "boolean",
                        "label": "Case sensitive",
                        "required": true
                    },
                    {
                        "name": "multiline",
                        "type": "boolean",
                        "label": "Multiline",
                        "required": true
                    },
                    {
                        "name": "singleline",
                        "type": "boolean",
                        "label": "Singleline",
                        "required": true
                    },
                    {
                        "name": "continueWhenNoRes",
                        "type": "boolean",
                        "label": "Continue the execution of the route even if the module finds no matches",
                        "required": true
                    },
                    {
                        "name": "ignoreInfiniteLoopsWhenGlobal",
                        "type": "boolean",
                        "label": "Ignore errors when there is an infinite search loop",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "text",
                        "type": "text",
                        "label": "Text"
                    }
                ],
                "interface": [
                    {
                        "name": "$1",
                        "type": "text",
                        "label": "$1"
                    },
                    {
                        "name": "i",
                        "type": "uinteger",
                        "label": "i"
                    },
                    {
                        "name": "__IMTMATCH__",
                        "type": "any",
                        "label": "Fallback Match"
                    }
                ]
            }
        },
        {
            "id": 16,
            "module": "builtin:BasicAggregator",
            "version": 1,
            "parameters": {
                "feeder": 15
            },
            "mapper": {
                "$1": "{{15.`$1`}}"
            },
            "metadata": {
                "designer": {
                    "x": 1555,
                    "y": 36
                },
                "restore": {
                    "extra": {
                        "feeder": {
                            "label": "Text parser - Match pattern [15]"
                        },
                        "target": {
                            "label": "Custom"
                        }
                    }
                }
            }
        },
        {
            "id": 17,
            "module": "openai-gpt-3:CreateCompletion",
            "version": 1,
            "parameters": {
                "__IMTCONN__": 3240239
            },
            "mapper": {
                "model": "ft:gpt-4o-2024-08-06:mb:ainonlystyle:ALqhNKDm",
                "top_p": "1",
                "select": "chat",
                "messages": [
                    {
                        "role": "system",
                        "content": "You are Igor Pogany, the founder of the AI Advantage community. Communicate with your team members in a natural, human-like manner, ensuring that your communication does not reveal that you are an AI. Provide a summary of what happened at the meeting based on the information provided by the user, in the form of a voice memo.\n\nWhen your name appears in the provided materials, speak in the first person about what you did. If specific dates are provided, include them instead of using terms like \"today,\" \"tomorrow,\" etc.\n\nKeep correct interpretation and format it."
                    },
                    {
                        "role": "user",
                        "content": "Say hello to the team, meeting type ({{6.`$1`}}) and the date when it happened in the past ({{5.`$1`}}). Then say it's time to start the recap."
                    }
                ],
                "max_tokens": "0",
                "temperature": "1",
                "n_completions": "1",
                "response_format": "text"
            },
            "metadata": {
                "designer": {
                    "x": -227,
                    "y": 397
                },
                "restore": {
                    "expect": {
                        "stop": {
                            "mode": "chose"
                        },
                        "model": {
                            "mode": "edit"
                        },
                        "select": {
                            "label": "Create a Chat Completion (GPT Models)"
                        },
                        "messages": {
                            "mode": "chose",
                            "items": [
                                {
                                    "role": {
                                        "mode": "chose",
                                        "label": "System"
                                    }
                                },
                                {
                                    "role": {
                                        "mode": "chose",
                                        "label": "User"
                                    }
                                }
                            ]
                        },
                        "logit_bias": {
                            "mode": "chose"
                        },
                        "response_format": {
                            "mode": "chose",
                            "label": "Text"
                        },
                        "additionalParameters": {
                            "mode": "chose"
                        }
                    },
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "openai-gpt-3"
                            },
                            "label": "AIA Finetuning"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:openai-gpt-3",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "select",
                        "type": "select",
                        "label": "Select Method",
                        "required": true,
                        "validate": {
                            "enum": [
                                "chat",
                                "prompt"
                            ]
                        }
                    },
                    {
                        "name": "max_tokens",
                        "type": "number",
                        "label": "Max Tokens",
                        "required": true
                    },
                    {
                        "name": "temperature",
                        "type": "number",
                        "label": "Temperature",
                        "validate": {
                            "max": 2,
                            "min": 0
                        }
                    },
                    {
                        "name": "top_p",
                        "type": "number",
                        "label": "Top P",
                        "validate": {
                            "max": 1,
                            "min": 0
                        }
                    },
                    {
                        "name": "n_completions",
                        "type": "number",
                        "label": "Number"
                    },
                    {
                        "name": "frequency_penalty",
                        "type": "number",
                        "label": "Frequency Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "presence_penalty",
                        "type": "number",
                        "label": "Presence Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "logit_bias",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "token",
                                    "type": "text",
                                    "label": "Token ID",
                                    "required": true
                                },
                                {
                                    "name": "probability",
                                    "type": "number",
                                    "label": "Probability",
                                    "required": true,
                                    "validate": {
                                        "max": 100,
                                        "min": -100
                                    }
                                }
                            ],
                            "type": "collection",
                            "label": "Token Probability"
                        },
                        "type": "array",
                        "label": "Token Probability"
                    },
                    {
                        "name": "response_format",
                        "type": "select",
                        "label": "Response Format",
                        "validate": {
                            "enum": [
                                "text",
                                "json_object"
                            ]
                        }
                    },
                    {
                        "name": "seed",
                        "type": "integer",
                        "label": "Seed"
                    },
                    {
                        "name": "stop",
                        "spec": {
                            "name": "value",
                            "type": "text",
                            "label": "Stop Sequence"
                        },
                        "type": "array",
                        "label": "Stop Sequences",
                        "validate": {
                            "maxItems": 4
                        }
                    },
                    {
                        "name": "additionalParameters",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "key",
                                    "type": "text",
                                    "label": "Parameter Name",
                                    "required": true
                                },
                                {
                                    "name": "type",
                                    "type": "select",
                                    "label": "Input Type",
                                    "options": [
                                        {
                                            "label": "Text",
                                            "value": "text",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "text",
                                                    "label": "Parameter Value"
                                                }
                                            ],
                                            "default": true
                                        },
                                        {
                                            "label": "Number",
                                            "value": "number",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "number",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Boolean",
                                            "value": "boolean",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "boolean",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Date",
                                            "value": "date",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "date",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Any",
                                            "value": "any",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "any",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "type": "collection",
                            "label": "Input Parameter"
                        },
                        "type": "array",
                        "label": "Other Input Parameters"
                    },
                    {
                        "name": "model",
                        "type": "select",
                        "label": "Model",
                        "required": true
                    },
                    {
                        "name": "messages",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "role",
                                    "type": "select",
                                    "label": "Role",
                                    "options": [
                                        {
                                            "label": "System",
                                            "value": "system"
                                        },
                                        {
                                            "label": "User",
                                            "value": "user"
                                        },
                                        {
                                            "label": "Assistant",
                                            "value": "assistant"
                                        }
                                    ],
                                    "required": true
                                },
                                {
                                    "name": "content",
                                    "type": "text",
                                    "label": "Message Content"
                                }
                            ],
                            "type": "collection",
                            "label": "Message"
                        },
                        "type": "array",
                        "label": "Messages",
                        "required": true
                    }
                ]
            }
        },
        {
            "id": 20,
            "module": "builtin:BasicFeeder",
            "version": 1,
            "parameters": {},
            "mapper": {
                "array": "{{16.array}}"
            },
            "metadata": {
                "designer": {
                    "x": 73,
                    "y": 397
                },
                "restore": {
                    "expect": {
                        "array": {
                            "mode": "edit"
                        }
                    }
                },
                "expect": [
                    {
                        "mode": "edit",
                        "name": "array",
                        "spec": [],
                        "type": "array",
                        "label": "Array"
                    }
                ]
            }
        },
        {
            "id": 19,
            "module": "openai-gpt-3:CreateCompletion",
            "version": 1,
            "parameters": {
                "__IMTCONN__": 3240239
            },
            "mapper": {
                "model": "ft:gpt-4o-2024-08-06:mb:ainonlystyle:ALqhNKDm",
                "top_p": "1",
                "select": "chat",
                "messages": [
                    {
                        "role": "system",
                        "content": "You are Igor Pogany, the founder of the AI Advantage community. Communicate with your team members in a natural, human-like manner, ensuring that your communication does not reveal that you are an AI. Provide a summary of what happened at the meeting based on the information provided by the user, in the form of a voice memo.\n\nWhen your name appears in the provided materials, speak in the first person about what you did. If specific dates are provided, include them instead of using terms like \"today,\" \"tomorrow,\" etc.\n\nKeep correct interpretation and format it."
                    },
                    {
                        "role": "user",
                        "content": "You're already discussing the meeting with the team, so no need to greet them again. Just move on to topic {{20.`__IMTINDEX__`}} of {{16.`__IMTAGGLENGTH__`}}. Only use first names of the people mentioned (no last names). Say the same thing but in your own words, using less than 100 tokens:\n\n{{20.`$1`}}"
                    }
                ],
                "max_tokens": "0",
                "temperature": "1",
                "n_completions": "1",
                "response_format": "text"
            },
            "metadata": {
                "designer": {
                    "x": 348,
                    "y": 392
                },
                "restore": {
                    "expect": {
                        "stop": {
                            "mode": "chose"
                        },
                        "model": {
                            "mode": "edit"
                        },
                        "select": {
                            "label": "Create a Chat Completion (GPT Models)"
                        },
                        "messages": {
                            "mode": "chose",
                            "items": [
                                {
                                    "role": {
                                        "mode": "chose",
                                        "label": "System"
                                    }
                                },
                                {
                                    "role": {
                                        "mode": "chose",
                                        "label": "User"
                                    }
                                }
                            ]
                        },
                        "logit_bias": {
                            "mode": "chose"
                        },
                        "response_format": {
                            "mode": "chose",
                            "label": "Text"
                        },
                        "additionalParameters": {
                            "mode": "chose"
                        }
                    },
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "openai-gpt-3"
                            },
                            "label": "AIA Finetuning"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:openai-gpt-3",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "select",
                        "type": "select",
                        "label": "Select Method",
                        "required": true,
                        "validate": {
                            "enum": [
                                "chat",
                                "prompt"
                            ]
                        }
                    },
                    {
                        "name": "max_tokens",
                        "type": "number",
                        "label": "Max Tokens",
                        "required": true
                    },
                    {
                        "name": "temperature",
                        "type": "number",
                        "label": "Temperature",
                        "validate": {
                            "max": 2,
                            "min": 0
                        }
                    },
                    {
                        "name": "top_p",
                        "type": "number",
                        "label": "Top P",
                        "validate": {
                            "max": 1,
                            "min": 0
                        }
                    },
                    {
                        "name": "n_completions",
                        "type": "number",
                        "label": "Number"
                    },
                    {
                        "name": "frequency_penalty",
                        "type": "number",
                        "label": "Frequency Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "presence_penalty",
                        "type": "number",
                        "label": "Presence Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "logit_bias",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "token",
                                    "type": "text",
                                    "label": "Token ID",
                                    "required": true
                                },
                                {
                                    "name": "probability",
                                    "type": "number",
                                    "label": "Probability",
                                    "required": true,
                                    "validate": {
                                        "max": 100,
                                        "min": -100
                                    }
                                }
                            ],
                            "type": "collection",
                            "label": "Token Probability"
                        },
                        "type": "array",
                        "label": "Token Probability"
                    },
                    {
                        "name": "response_format",
                        "type": "select",
                        "label": "Response Format",
                        "validate": {
                            "enum": [
                                "text",
                                "json_object"
                            ]
                        }
                    },
                    {
                        "name": "seed",
                        "type": "integer",
                        "label": "Seed"
                    },
                    {
                        "name": "stop",
                        "spec": {
                            "name": "value",
                            "type": "text",
                            "label": "Stop Sequence"
                        },
                        "type": "array",
                        "label": "Stop Sequences",
                        "validate": {
                            "maxItems": 4
                        }
                    },
                    {
                        "name": "additionalParameters",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "key",
                                    "type": "text",
                                    "label": "Parameter Name",
                                    "required": true
                                },
                                {
                                    "name": "type",
                                    "type": "select",
                                    "label": "Input Type",
                                    "options": [
                                        {
                                            "label": "Text",
                                            "value": "text",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "text",
                                                    "label": "Parameter Value"
                                                }
                                            ],
                                            "default": true
                                        },
                                        {
                                            "label": "Number",
                                            "value": "number",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "number",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Boolean",
                                            "value": "boolean",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "boolean",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Date",
                                            "value": "date",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "date",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Any",
                                            "value": "any",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "any",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "type": "collection",
                            "label": "Input Parameter"
                        },
                        "type": "array",
                        "label": "Other Input Parameters"
                    },
                    {
                        "name": "model",
                        "type": "select",
                        "label": "Model",
                        "required": true
                    },
                    {
                        "name": "messages",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "role",
                                    "type": "select",
                                    "label": "Role",
                                    "options": [
                                        {
                                            "label": "System",
                                            "value": "system"
                                        },
                                        {
                                            "label": "User",
                                            "value": "user"
                                        },
                                        {
                                            "label": "Assistant",
                                            "value": "assistant"
                                        }
                                    ],
                                    "required": true
                                },
                                {
                                    "name": "content",
                                    "type": "text",
                                    "label": "Message Content"
                                }
                            ],
                            "type": "collection",
                            "label": "Message"
                        },
                        "type": "array",
                        "label": "Messages",
                        "required": true
                    }
                ]
            }
        },
        {
            "id": 21,
            "module": "util:TextAggregator",
            "version": 1,
            "parameters": {
                "feeder": 20,
                "rowSeparator": ""
            },
            "mapper": {
                "value": "{{19.result}}\n\n<break time=\"1s\" />\n"
            },
            "metadata": {
                "designer": {
                    "x": 648,
                    "y": 392
                },
                "restore": {
                    "extra": {
                        "feeder": {
                            "label": "Iterator [20]"
                        }
                    },
                    "parameters": {
                        "rowSeparator": {
                            "label": "Empty"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "rowSeparator",
                        "type": "select",
                        "label": "Row separator",
                        "validate": {
                            "enum": [
                                "\n",
                                "\t",
                                "other"
                            ]
                        }
                    }
                ],
                "expect": [
                    {
                        "name": "value",
                        "type": "text",
                        "label": "Text"
                    }
                ]
            }
        },
        {
            "id": 22,
            "module": "openai-gpt-3:CreateCompletion",
            "version": 1,
            "parameters": {
                "__IMTCONN__": 3240239
            },
            "mapper": {
                "model": "ft:gpt-4o-2024-08-06:mb:ainonlystyle:ALqhNKDm",
                "top_p": "1",
                "select": "chat",
                "messages": [
                    {
                        "role": "system",
                        "content": "You are Igor Pogany, the founder of the AI Advantage community. Communicate with your team members in a natural, human-like manner, ensuring that your communication does not reveal that you are an AI. Provide a summary of what happened at the meeting based on the information provided by the user, in the form of a voice memo.\n\nWhen your name appears in the provided materials, speak in the first person about what you did. If specific dates are provided, include them instead of using terms like \"today,\" \"tomorrow,\" etc.\n\nKeep correct interpretation and format it."
                    },
                    {
                        "role": "user",
                        "content": "Say hello to the team, meeting type ({{6.`$1`}}) and the date when it happened in the past ({{5.`$1`}}). Then say it's time to start the recap."
                    },
                    {
                        "role": "assistant",
                        "content": "{{17.result}}"
                    },
                    {
                        "role": "user",
                        "content": "Say goodbye to the team and say \"see you at the next {{6.`$1`}}.\""
                    }
                ],
                "max_tokens": "0",
                "temperature": "1",
                "n_completions": "1",
                "response_format": "text"
            },
            "metadata": {
                "designer": {
                    "x": 948,
                    "y": 392
                },
                "restore": {
                    "expect": {
                        "stop": {
                            "mode": "chose"
                        },
                        "model": {
                            "mode": "edit"
                        },
                        "select": {
                            "label": "Create a Chat Completion (GPT Models)"
                        },
                        "messages": {
                            "mode": "chose",
                            "items": [
                                {
                                    "role": {
                                        "mode": "chose",
                                        "label": "System"
                                    }
                                },
                                {
                                    "role": {
                                        "mode": "chose",
                                        "label": "User"
                                    }
                                },
                                {
                                    "role": {
                                        "mode": "chose",
                                        "label": "Assistant"
                                    }
                                },
                                {
                                    "role": {
                                        "mode": "chose",
                                        "label": "User"
                                    }
                                }
                            ]
                        },
                        "logit_bias": {
                            "mode": "chose"
                        },
                        "response_format": {
                            "mode": "chose",
                            "label": "Text"
                        },
                        "additionalParameters": {
                            "mode": "chose"
                        }
                    },
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "openai-gpt-3"
                            },
                            "label": "AIA Finetuning"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:openai-gpt-3",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "select",
                        "type": "select",
                        "label": "Select Method",
                        "required": true,
                        "validate": {
                            "enum": [
                                "chat",
                                "prompt"
                            ]
                        }
                    },
                    {
                        "name": "max_tokens",
                        "type": "number",
                        "label": "Max Tokens",
                        "required": true
                    },
                    {
                        "name": "temperature",
                        "type": "number",
                        "label": "Temperature",
                        "validate": {
                            "max": 2,
                            "min": 0
                        }
                    },
                    {
                        "name": "top_p",
                        "type": "number",
                        "label": "Top P",
                        "validate": {
                            "max": 1,
                            "min": 0
                        }
                    },
                    {
                        "name": "n_completions",
                        "type": "number",
                        "label": "Number"
                    },
                    {
                        "name": "frequency_penalty",
                        "type": "number",
                        "label": "Frequency Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "presence_penalty",
                        "type": "number",
                        "label": "Presence Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "logit_bias",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "token",
                                    "type": "text",
                                    "label": "Token ID",
                                    "required": true
                                },
                                {
                                    "name": "probability",
                                    "type": "number",
                                    "label": "Probability",
                                    "required": true,
                                    "validate": {
                                        "max": 100,
                                        "min": -100
                                    }
                                }
                            ],
                            "type": "collection",
                            "label": "Token Probability"
                        },
                        "type": "array",
                        "label": "Token Probability"
                    },
                    {
                        "name": "response_format",
                        "type": "select",
                        "label": "Response Format",
                        "validate": {
                            "enum": [
                                "text",
                                "json_object"
                            ]
                        }
                    },
                    {
                        "name": "seed",
                        "type": "integer",
                        "label": "Seed"
                    },
                    {
                        "name": "stop",
                        "spec": {
                            "name": "value",
                            "type": "text",
                            "label": "Stop Sequence"
                        },
                        "type": "array",
                        "label": "Stop Sequences",
                        "validate": {
                            "maxItems": 4
                        }
                    },
                    {
                        "name": "additionalParameters",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "key",
                                    "type": "text",
                                    "label": "Parameter Name",
                                    "required": true
                                },
                                {
                                    "name": "type",
                                    "type": "select",
                                    "label": "Input Type",
                                    "options": [
                                        {
                                            "label": "Text",
                                            "value": "text",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "text",
                                                    "label": "Parameter Value"
                                                }
                                            ],
                                            "default": true
                                        },
                                        {
                                            "label": "Number",
                                            "value": "number",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "number",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Boolean",
                                            "value": "boolean",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "boolean",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Date",
                                            "value": "date",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "date",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Any",
                                            "value": "any",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "any",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "type": "collection",
                            "label": "Input Parameter"
                        },
                        "type": "array",
                        "label": "Other Input Parameters"
                    },
                    {
                        "name": "model",
                        "type": "select",
                        "label": "Model",
                        "required": true
                    },
                    {
                        "name": "messages",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "role",
                                    "type": "select",
                                    "label": "Role",
                                    "options": [
                                        {
                                            "label": "System",
                                            "value": "system"
                                        },
                                        {
                                            "label": "User",
                                            "value": "user"
                                        },
                                        {
                                            "label": "Assistant",
                                            "value": "assistant"
                                        }
                                    ],
                                    "required": true
                                },
                                {
                                    "name": "content",
                                    "type": "text",
                                    "label": "Message Content"
                                }
                            ],
                            "type": "collection",
                            "label": "Message"
                        },
                        "type": "array",
                        "label": "Messages",
                        "required": true
                    }
                ]
            }
        },
        {
            "id": 23,
            "module": "util:SetVariable2",
            "version": 1,
            "parameters": {},
            "mapper": {
                "name": "Transcription",
                "scope": "roundtrip",
                "value": "{{17.result}}\n\n<break time=\"1s\" />\n\n{{21.text}}\n\n{{22.result}}"
            },
            "metadata": {
                "designer": {
                    "x": 1248,
                    "y": 392
                },
                "restore": {
                    "expect": {
                        "scope": {
                            "label": "One cycle"
                        }
                    }
                },
                "expect": [
                    {
                        "name": "name",
                        "type": "text",
                        "label": "Variable name",
                        "required": true
                    },
                    {
                        "name": "scope",
                        "type": "select",
                        "label": "Variable lifetime",
                        "required": true,
                        "validate": {
                            "enum": [
                                "roundtrip",
                                "execution"
                            ]
                        }
                    },
                    {
                        "name": "value",
                        "type": "any",
                        "label": "Variable value"
                    }
                ],
                "interface": [
                    {
                        "name": "Transcription",
                        "type": "any",
                        "label": "Transcription"
                    }
                ]
            }
        },
        {
            "id": 33,
            "module": "elevenlabs:createTextToSpeech",
            "version": 1,
            "parameters": {
                "__IMTCONN__": 3280642
            },
            "mapper": {
                "text": "{{23.Transcription}}",
                "model_id": "eleven_turbo_v2",
                "voice_id": "EtYz8HKAEZ1hAcyNB9fe",
                "voice_settings": {}
            },
            "metadata": {
                "designer": {
                    "x": -227,
                    "y": 741
                },
                "restore": {
                    "expect": {
                        "model_id": {
                            "mode": "chose",
                            "label": "Eleven Turbo v2 (eleven_turbo_v2)"
                        },
                        "voice_id": {
                            "mode": "chose",
                            "label": "professional/Igor AI Advantage"
                        },
                        "optimize_streaming_latency": {
                            "mode": "chose",
                            "label": "Empty"
                        }
                    },
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "elevenlabs"
                            },
                            "label": "Igor AI News"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:elevenlabs",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "voice_id",
                        "type": "select",
                        "label": "Voice",
                        "required": true
                    },
                    {
                        "name": "model_id",
                        "type": "select",
                        "label": "Model",
                        "required": true
                    },
                    {
                        "name": "text",
                        "type": "text",
                        "label": "Text",
                        "required": true
                    },
                    {
                        "name": "voice_settings",
                        "spec": [
                            {
                                "name": "stability",
                                "type": "number",
                                "label": "Stability",
                                "validate": {
                                    "max": 1,
                                    "min": 0
                                }
                            },
                            {
                                "name": "similarity_boost",
                                "type": "number",
                                "label": "Similarity Boost",
                                "validate": {
                                    "max": 1,
                                    "min": 0
                                }
                            }
                        ],
                        "type": "collection",
                        "label": "Voice Settings"
                    },
                    {
                        "name": "optimize_streaming_latency",
                        "type": "select",
                        "label": "Optimize Streaming Latency",
                        "validate": {
                            "enum": [
                                "0",
                                "1",
                                "2",
                                "3",
                                "4"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "id": 34,
            "module": "dropbox:uploadLargeFile",
            "version": 5,
            "parameters": {
                "__IMTCONN__": 726929
            },
            "mapper": {
                "data": "{{33.data}}",
                "filename": "{{28.name}}.mp3",
                "overwrite": false
            },
            "metadata": {
                "designer": {
                    "x": 73,
                    "y": 741
                },
                "restore": {
                    "expect": {
                        "path": {
                            "mode": "chose"
                        },
                        "overwrite": {
                            "mode": "chose"
                        }
                    },
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "dropbox"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:dropbox",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "path",
                        "type": "folder",
                        "label": "Folder",
                        "required": true
                    },
                    {
                        "name": "filename",
                        "type": "filename",
                        "label": "File Name",
                        "required": true
                    },
                    {
                        "name": "data",
                        "type": "buffer",
                        "label": "Data",
                        "required": true
                    },
                    {
                        "name": "overwrite",
                        "type": "boolean",
                        "label": "Overwrite an existing file",
                        "required": true
                    }
                ]
            }
        },
        {
            "id": 40,
            "module": "dropbox:uploadLargeFile",
            "version": 5,
            "parameters": {
                "__IMTCONN__": 726929
            },
            "mapper": {
                "data": "{{23.Transcription}}",
                "filename": "{{28.name}}_transcript.md",
                "overwrite": false
            },
            "metadata": {
                "designer": {
                    "x": 424,
                    "y": 737
                },
                "restore": {
                    "expect": {
                        "path": {
                            "mode": "chose"
                        },
                        "overwrite": {
                            "mode": "chose"
                        }
                    },
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "dropbox"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:dropbox",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "path",
                        "type": "folder",
                        "label": "Folder",
                        "required": true
                    },
                    {
                        "name": "filename",
                        "type": "filename",
                        "label": "File Name",
                        "required": true
                    },
                    {
                        "name": "data",
                        "type": "buffer",
                        "label": "Data",
                        "required": true
                    },
                    {
                        "name": "overwrite",
                        "type": "boolean",
                        "label": "Overwrite an existing file",
                        "required": true
                    }
                ]
            }
        },
        {
            "id": 38,
            "module": "dropbox:moveFileFolder",
            "version": 5,
            "parameters": {
                "__IMTCONN__": 726929
            },
            "mapper": {
                "path": "{{32.path_display}}",
                "select": "map",
                "autorename": true,
                "allow_ownership_transfer": false
            },
            "metadata": {
                "designer": {
                    "x": 769,
                    "y": 734
                },
                "restore": {
                    "expect": {
                        "select": {
                            "label": "Map a file/folder path"
                        },
                        "to_path": {
                            "mode": "chose"
                        },
                        "autorename": {
                            "mode": "chose"
                        },
                        "allow_ownership_transfer": {
                            "mode": "chose"
                        }
                    },
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "dropbox"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:dropbox",
                        "label": "Connection",
                        "required": true
                    }
                ],
                "expect": [
                    {
                        "name": "select",
                        "type": "select",
                        "label": "Way of selecting files",
                        "required": true,
                        "validate": {
                            "enum": [
                                "map",
                                "file"
                            ]
                        }
                    },
                    {
                        "name": "to_path",
                        "type": "folder",
                        "label": "To Folder"
                    },
                    {
                        "name": "name",
                        "type": "text",
                        "label": "New Name"
                    },
                    {
                        "name": "autorename",
                        "type": "boolean",
                        "label": "Auto rename",
                        "required": true
                    },
                    {
                        "name": "allow_ownership_transfer",
                        "type": "boolean",
                        "label": "Allow ownership transfer",
                        "required": true
                    },
                    {
                        "name": "path",
                        "type": "text",
                        "label": "File/Folder Path",
                        "required": true
                    }
                ],
                "advanced": true
            }
        }
    ],
    "metadata": {
        "instant": false,
        "version": 1,
        "scenario": {
            "roundtrips": 1,
            "maxErrors": 3,
            "autoCommit": true,
            "autoCommitTriggerLast": true,
            "sequential": false,
            "slots": null,
            "confidential": false,
            "dataloss": false,
            "dlq": false,
            "freshVariables": false
        },
        "designer": {
            "orphans": []
        },
        "zone": "eu2.make.com",
        "notes": []
    }
}